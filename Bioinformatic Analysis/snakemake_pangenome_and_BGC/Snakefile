# antiSMASH Snakemake

''' GLOBAL '''
import sys
import glob
import shutil

# Global variables: In theory do not need to be changed
CURRENT_DIRECTORY = os.getcwd()
SCRIPTS_DIRECTORY = config['myscripts_directory']
sys.path.insert(0, SCRIPTS_DIRECTORY)
spls = config['sample_table']

from gus_helper_functions import *
from itertools import compress
[PATH_ls, SAMPLE_ls, FILENAME_ls, FOLDER_ls, _, _] = read_samples_CSV(spls)


''' VARIABLES '''

# User defined variables: Make sure these are right before run!



''' FUNCTIONS '''

# User defined functions called by snakemake


''' SNAKEMAKE '''

rule all:
    # Special snakemake rule that defines which output files need to be created by the pipeline. 
    # Snakemake will only execute the steps (rules) necessary to create these output files.
    input:
        expand('data/{sampleID}/{sampleID}.gbff',sampleID=SAMPLE_ls),
        expand('01-antismash/{sampleID}/index.html',sampleID=SAMPLE_ls),
        '02-regions/results_summary.txt',
        '03-bigscape/index.html',
        '04-roary/pan_genome_reference.fa',
        '05-summarize-results/merged_tables.csv'


rule make_data_links:
    input:
        input_file=expand('{path}/{folder}/{fn}',zip,path=PATH_ls,folder=FOLDER_ls,fn=FILENAME_ls),
    output:
        genbank_links=expand('data/{sampleID}/{sampleID}.gbff',sampleID=SAMPLE_ls),
    run:
        for i in range(len(SAMPLE_ls)):
            sourcefile = PATH_ls[i] + '/' + FOLDER_ls[i] + '/' + FILENAME_ls[i]
            linkfile = 'data/' + SAMPLE_ls[i] + '/' + SAMPLE_ls[i] + '.gbff'
            subprocess.run( 'ln -fs -T ' + sourcefile + ' ' + linkfile,shell=True)

rule antismash:
    input:
        genbank='data/{sampleID}/{sampleID}.gbff',
    params:
        out_dir='01-antismash/{sampleID}/',
    output:
        html='01-antismash/{sampleID}/index.html',
    conda:
        'envs/antismash.yaml'
    shell:
        """
        antismash --genefinding-tool none --cb-subclusters --cb-knownclusters --asf --output-dir {params.out_dir} {input.genbank}
        """

rule concatentate_antismash_results:
    input:
        expand('01-antismash/{sampleID}/index.html',sampleID=SAMPLE_ls),
    output:
        summary_txt = '02-regions/results_summary.txt',
    run:
        # copy and rename regions gbks
        for i in range(len(SAMPLE_ls)):
            pattern = '01-antismash/' + SAMPLE_ls[i] + '/*region*.gbk'
            matching_files = glob.glob(pattern)
            for file_path in matching_files:
                file_name = os.path.basename(file_path)
                new_file_name =  SAMPLE_ls[i] + '_' + file_name
                destination_name = os.path.join('02-regions', new_file_name)
                shutil.copy(file_path, destination_name)
            # also copy json
            pattern = '01-antismash/' + SAMPLE_ls[i] + '/*.json'
            matching_files = glob.glob(pattern)
            for file_path in matching_files:
                file_name = os.path.basename(file_path)
                new_file_name =  file_name
                destination_name = os.path.join('02-regions', new_file_name)
                shutil.copy(file_path, destination_name)
        # list all regions
        files = os.listdir('02-regions')
        with open('02-regions/results_summary.txt', 'w') as file:
            for file_name in files:
                if 'gbk' in file_name: 
                    file.write(file_name + '\n')

rule bigscape:
    input:
        summary_txt = '02-regions/results_summary.txt',
    output:
        index = '03-bigscape/index.html',
    params:
        in_dir='02-regions',
        out_dir='03-bigscape',
        db='/nfs/pool002/users/mancusoc/BiG-SCAPE/Pfam-A.hmm'
    conda:
        'bigscape', #since beta version install require
    shell:
        "bigscape cluster -i {params.in_dir} -o {params.out_dir} -c 8 -p {params.db} --classify legacy"


rule roary_prep:
    input:
        genbank='data/{sampleID}/{sampleID}.gbff',
    params:
        out_dir='04-roary-temp/'
    output:
        gff='04-roary-temp/{sampleID}.gbff.gff',
    conda:
        'roary' #since perl update required
    shell:
        """
        /nfs/pool002/users/mancusoc/miniconda3/envs/roary/bin/bp_genbank2gff3.pl {input.genbank} -o {params.out_dir}
        """

rule roary:
    input:
        expand('04-roary-temp/{sampleID}.gbff.gff',sampleID=SAMPLE_ls),
    params:
        in_dir='04-roary-temp',
        out_dir='04-roary'
    conda:
        'roary' #since perl update required
    output:
        gene_presence_absence='04-roary/gene_presence_absence.csv',
        pangenome='04-roary/pan_genome_reference.fa',
    shell:
        """
        rm -rf '{params.out_dir}'
        roary -p 8 {params.in_dir}/*.gff -f {params.out_dir} -e --mafft
        """

rule summarize_results:
    input:
        bigscape_file = '03-bigscape/index.html',
        antismash_file = '02-regions/results_summary.txt',
    output:
        merged_tables = '05-summarize-results/merged_tables.csv'
    shell:
        """
        python scripts/parse_BGC_results_and_merge.py
        """


